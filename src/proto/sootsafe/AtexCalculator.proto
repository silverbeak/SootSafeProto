syntax = "proto3";

import "SootSafeCommon.proto";

option java_package = "com.sootsafe.server.calculator";
option go_package = "com.sootsafe.server.calculator";

package com.sootsafe.server.calculator;

message AtexResultEntry {
    int32 key = 1;
    double releaseCharacter = 2;
}

message AtexCalculationResult {
    ErrorMessage errorMessage = 1;
    AtexResultEntry atexResult = 2;
    double zoneExtent = 3;
    string zoneLabel = 4;
    bytes latex = 5;
}

message ReleaseRateValues {
    double volumetricGasFlowRate = 1;    // Q_g
    double safetyFactor = 2;             // k
    double lowerFlammableLimit = 3;      // LFL
    //double massReleaseRate = 4;          // W_g
    double evaporationRate = 4;          // W_e
    double molarMass = 5;                // M
    double gasDensity = 6;               // rho_g
    double dischargeCoefficient = 7;     // C_d
    //    double crossSectionArea = 8;         // S
    double pressureDifference = 9;       // p
    double poolSurfaceArea = 10;         // A_p
    double windSpeed = 11;               // u_w
    double absoluteTemperature = 12;     // T
    double adiabaticExpansion = 13;      // \\gamma
    double atmosphericPressure = 14;     // p_a
    double containerPressure = 15;       // p
    double criticalGasPressure = 16;     // p_c
    double compressibilityFactor = 17;   // Z
}

message RoomDimension {
    double width = 1;                    // B
    double height = 2;                   // H
    double depth = 3;                    // L (using 'depth' instead of length to avoid risk of conflict with reserved keywords)
}

message BackgroundConcentrationValues {
    double ventilationEfficiencyFactor = 1; // f
    double volumetricFlowAir = 2;           // Q1
    double volumetricFlowAirGas = 3;        // Q2
    double airChangeFrequency = 4;          // C
    double airEnteringRoomFlowRate = 5;     // Q or Q_A
    RoomDimension roomDimensions = 6;       // V0
    double crossSectionArea = 7;            // S
}

message VentilationVelocityValues {
    double elevation = 1;
    Obstruction obstructed = 2;
}

message AtexMetadata {
    string authorName = 1;
}

message AtexFields {
    int32 key = 1;
    AtexMetadata atexMetadata = 2;
    bool isGasCalculation = 3;
    bool performReleaseCalculation = 4;
    bool hasReleaseRateInKgPerSecond = 5;
    bool isEvaporationFromPool = 6;

    ReleaseRateValues releaseRate = 7;

    bool isIndoors = 8;

    BackgroundConcentrationValues backgroundConcentration = 9;

    GradeOfRelease gradeOfRelease = 10;
    ReleaseType releaseType = 11;

    VentilationVelocityValues ventilationVelocityValues = 12;
    VentilationAvailability ventilationAvailability = 13;

    string casNumber = 14;
}

message MetadataField {
    string name = 1;
    string path = 2;
    string type = 3;
    string value = 4;
}

message Metadata {
    repeated string users = 1;
    MetadataField name = 2;
    string projectType = 3;
}

message AtexRequest {
    AtexFields fields = 1;
    Metadata metadata = 2;
}

service AtexCalculator {
    rpc CalculateAtex (AtexRequest) returns (AtexCalculationResult) {
    }
}

enum VentilationAvailability {
    Good = 0;
    Fair = 1;
    Poor = 2;
}

enum GradeOfRelease {
    Continuous = 0;
    Primary = 1;
    Secondary = 2;
}

enum ReleaseType {
    Jet = 0;
    DiffusiveJet = 1;
    HeavyGas = 2;
}

enum Obstruction {
    Obstructed = 0;
    Unobstructed = 1;
}
